name: Terraform
on:
  - push
  - workflow_dispatch

permissions:
  id-token: write

env:
  ARM_USE_OIDC: true
  ARM_USE_AZUREAD: true
  ARM_TENANT_ID: ${{ secrets.azure_tenant_id }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.azure_subscription_id }}
  ARM_CLIENT_ID: ${{ secrets.azure_client_id }}

jobs:
  terraform-workflow:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    - name: Cache Terraform modules
      uses: actions/cache@v3
      id: cache
      with:
        path: ./terraform
        key: ${{ runner.os }}-terraform-${{ hashFiles('terraform/**/*.tf') }}
    - name: Az CLI login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.azure_client_id }}
        tenant-id: ${{ secrets.azure_tenant_id }}
        subscription-id: ${{ secrets.azure_subscription_id }}
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
    - name: Terraform Validate
      working-directory: ./terraform
      run: terraform validate
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4.0.0
    - name: Init TFLint
      run: tflint --init
      working-directory: ./terraform
      env:
        # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
        GITHUB_TOKEN: ${{ github.token }}
    - name: Run TFLint
      working-directory: ./terraform
      run: tflint --recursive
    - name: Terraform Plan
      working-directory: ./terraform
      run: |
        terraform plan -out=tfplan -var="location=eastus"
        terraform-bin show -json -no-color tfplan > tfplan.json
        terraform-bin show -no-color tfplan >> $GITHUB_STEP_SUMMARY
#    - name: Conftest
#      uses: instrumenta/conftest-action@v0.4.0
#      with:
#        files: ./terraform/tfplan.json
#        policy: ./policy
#    - name: Terraform Apply
#      working-directory: ./terraform
#      run: terraform apply tfplan
